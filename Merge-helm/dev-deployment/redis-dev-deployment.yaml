apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: helm-dev-rs-2
  labels:
    name: redis
    app: redis
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: "rticatapult.azurecr.io/redisgraph:latest"
        command:
            - redis-server
        # args:
        #   - '--requirepass' 
        #   - '12345'
        #   - '--masterauth' 
        #   - '12345'
        #   - '--loadmodule'
        #   - '/opt/redis-stack/lib/redisgraph.so'
        args:
          - '--requirepass' 
          - '12345'
          - '--masterauth' 
          - '12345'
          - '--loadmodule'
          - '/usr/lib/redis/modules/redisgraph.so'
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 20
          timeoutSeconds: 30
          periodSeconds: 3
        # data volume where redis writes data
        volumeMounts:
        - name: redata
          mountPath: /data
          readOnly: false
        resources:
          requests:
            cpu: 128m
            memory: 800Mi
          limits:
            cpu: 500m
            memory: 4Gi
      tolerations:
        - key: type
          operator: Equal
          value: resrv
          effect: NoSchedule
      restartPolicy: Always
      volumes:
        - name: redata
          persistentVolumeClaim:
            claimName: data-superset-postgresql-0
        - name: resrv
          persistentVolumeClaim:
            claimName: merge-shared-folder
      imagePullSecrets:
      - name: regcred